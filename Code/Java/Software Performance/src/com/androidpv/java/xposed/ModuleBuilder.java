package com.androidpv.java.xposed;

import com.androidpv.java.gui.DataSubmit;
import com.androidpv.java.gui.PVView;

import javax.swing.*;
import java.io.*;


/**
 * Created by Erin on 2/27/16.
 *
 * ModuleBuilder takes in the parsed code generated by Parser and constructs an Xposed module.
 */
public class ModuleBuilder {

    /**
     * Constructor for ModuleBuilder. Creates a text file containing the Xposed module source code.
     *
     * @param packageString
     */
    public ModuleBuilder(String packageString, String apk, String adbLoc, String sdkLoc, String uName, String adbDir) {

        System.out.println("in module builder");

        String[] packageList = packageString.split(";");

        SwingWorker worker = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {

                try {
                    String currentDir = System.getProperty("user.dir");
                    PrintWriter writer = new PrintWriter(new BufferedWriter(new FileWriter(currentDir +
                            "/AndroidTest/src/main/java/com/test/Tutorial.java")));

                    writer.print(MBConstants.FIRST_HALF);

                    for (int i = 0; i < packageList.length; i++) {
                        if (i > 0) {
                            writer.print(MBConstants.ANOTHER);
                        }
                        writer.print(packageList[i].trim());
                    }

                    writer.print(MBConstants.SECOND_HALF);

                    writer.close();
                }
                catch (IOException e) {
                    e.printStackTrace();
                }
                return null;
            }

            @Override
            protected void done() {

                boolean stop = false;

                APKBuilder builder = new APKBuilder();

                boolean pingSuccess = builder.tryPing(adbLoc);
                if (pingSuccess) {

                    if (!apk.equals("")) {
                        boolean installation = builder.tryToInstallAPK(adbLoc, apk);
                        if (!installation) {
                            PVView.getInstance().updateOutLog("Failed to install APK at " + adbLoc + ".\n" +
                                    "Please provide correct APK or do not provide at all.\n");
                            JOptionPane.showMessageDialog(null, "APK failed to install.");
                            stop = true;
                        }
                        else {
                            PVView.getInstance().updateOutLog("Installed APK at " + apk + ".\n");
                        }
                    }
                    if (!stop) {

                        PVView.getInstance().updateOutLog("Building module...\n");
                        boolean apkSuccess = builder.tryToBuildAPK(adbLoc, sdkLoc);

                        if (apkSuccess) {

                            int reply = JOptionPane.showConfirmDialog(null, "Your module is ready.\nPlease restart device.\nWould you like to switch views?", "Submit View", JOptionPane.OK_OPTION);
                            if (reply == JOptionPane.OK_OPTION) {
                                DataSubmit.instance = new DataSubmit(uName, adbDir);
                                PVView.getInstance().setVisible(false);
                            } else {
                                JOptionPane.showMessageDialog(null, "GOODBYE");
                            }
                        } else {
                            PVView.getInstance().updateOutLog("Build failed. Please provide proper directory to\n" +
                                    "android sdks. Directory must include android 23.");
                            JOptionPane.showMessageDialog(null, "Build failed. Please provide proper directory to\n" +
                                    "android sdks. Directory must include android 23.");
                        }
                    }
                }
                else {
                    System.err.println("Device not connected.");
                    PVView.getInstance().updateOutLog("No device detected or incorrect path to adb.\n" +
                            "Please connect device or update correct path and try again.\n");
                    JOptionPane.showMessageDialog(null, "No device detected\n or incorrect path to adb.\n" +
                            "Please connect device\n or provide correct path\nand try again.\n");
                }
            }
        };
        worker.execute();
    }
}
